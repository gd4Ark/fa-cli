{"version":3,"file":"index.umd.js","sources":["../src/config/index.ts","../src/utils/check-version.ts","../src/utils/get-template-list.ts","../src/utils/logger.ts","../src/utils/download-template.ts","../src/utils/get-git-user.ts","../src/utils/options.ts","../src/utils/ask.ts","../src/utils/install.ts","../src/command/init/index.ts","../src/utils/system.ts","../src/command/list/page.ts","../src/command/list/index.ts","../src/command/download/index.ts","../src/utils/index.ts","../src/command/add/page.ts","../src/command/add/index.ts","../src/command/delete/page.ts","../src/command/delete/index.ts","../src/command/index.ts","../src/index.ts","../src/bin/fa.ts"],"sourcesContent":["const path = require('path')\nconst home = require('user-home')\nconst pgk = require('../package.json')\nconst org_name = 'fa-web-template'\n\nexport const pro_name: string = pgk.name\n\nexport const root_path: string = path.join(__dirname, '../')\n\nexport const tpl_path: string = path.join(home, `.${org_name}`)\n\nexport const user_path: string = process.cwd()\n\nexport const user_tpl_json_path: string = `${process.cwd()}/template.json`\n\nexport const git_tpl_list_url: string = `https://api.github.com/orgs/${org_name}/repos`\n\nexport const git_repo_default_branch: string = 'master'\n\nexport const cli_tag_url: string = 'https://registry.npm.taobao.org/fa-cli'\n","import { cli_tag_url, pro_name } from '../config/index'\nconst request = require('request')\nconst semver = require('semver')\nconst chalk = require('chalk')\nconst packageConfig = require('../package.json')\n\nexport default (done: () => void): void => {\n  // Ensure minimum supported node version is used\n  if (!semver.satisfies(process.version, packageConfig.engines.node)) {\n    return console.log(\n      chalk.red(`  You must upgrade node to >=${packageConfig.engines.node}.x to use vue-cli`)\n    )\n  }\n  request(\n    {\n      url: cli_tag_url,\n      timeout: 1000\n    },\n    (err: Error | null, res: any, body: string): void => {\n      if (!err && res.statusCode === 200) {\n        const data = JSON.parse(body)['dist-tags']\n        const version = data.latest\n        const localVersion = packageConfig.version\n        if (semver.lt(localVersion, version)) {\n          console.log(chalk.yellow(` ${pro_name} release new version!`))\n          console.log('  latest:    ' + chalk.green(version))\n          console.log('  installed: ' + chalk.red(localVersion))\n        }\n      }\n      done()\n    }\n  )\n}\n","import { repositorie, templates } from '../types'\r\nimport { git_tpl_list_url, pro_name } from '../config'\r\n\r\nconst request = require('request')\r\nconst ora = require('ora')\r\n\r\nlet templates: templates | null = null\r\n\r\nexport default async (show: boolean = true): Promise<templates> => {\r\n  if (templates) return templates\r\n\r\n  const spinner = ora('getting template...')\r\n\r\n  if (show) {\r\n    spinner.start()\r\n  }\r\n\r\n  const headers = {\r\n    headers: {\r\n      'User-Agent': pro_name\r\n    },\r\n    url: git_tpl_list_url\r\n  }\r\n\r\n  const handler = (data: repositorie[]): templates => {\r\n    const tpls: templates = {}\r\n\r\n    data.forEach((item: repositorie) => {\r\n      const { name, html_url, default_branch } = item\r\n      tpls[name] = {\r\n        'owner/name': html_url.replace('https://github.com/', ''),\r\n        branch: default_branch\r\n      }\r\n    })\r\n\r\n    return tpls\r\n  }\r\n\r\n  return new Promise<templates>((resolve, reject): void => {\r\n    request(headers, (err: any, res: any, body: string): void => {\r\n      spinner.stop()\r\n\r\n      if (err) reject(err)\r\n\r\n      const data = JSON.parse(body)\r\n      templates = handler(data)\r\n\r\n      resolve(templates)\r\n    })\r\n  })\r\n}\r\n","const chalk = require('chalk')\nconst format = require('util').format\n\n/**\n * Prefix.\n */\n\nconst prefix = `  ${require('..//package.json').name}`\nconst sep = chalk.gray('Â·')\n\n/**\n * Log a `message` to the console.\n *\n * @param {String} message\n */\n\nexport const log = (...args: any[]): void => {\n  const msg = format.apply(format, args)\n  console.log(chalk.white(prefix), sep, msg)\n}\n\n/**\n * Log an error `message` to the console and exit.\n *\n * @param {String} message\n */\n\nexport const fatal = (...args: any[]): void => {\n  if (args[0] instanceof Error) args[0] = args[0].message.trim()\n  const msg = format.apply(format, args)\n  console.error(chalk.red(prefix), sep, msg)\n  process.exit(1)\n}\n\n/**\n * Log a success `message` to the console and exit.\n *\n * @param {String} message\n */\n\nexport const success = (...args: any[]): void => {\n  const msg = format.apply(format, args)\n  console.log(chalk.white(prefix), sep, msg)\n}\n\nexport default {\n  log,\n  fatal,\n  success\n}\n","import { initAnswer, downloadQuestion, downloadAnswer, templates } from '../types/index'\r\nimport { tpl_path, git_repo_default_branch } from '../config'\r\nimport getTemplateList from './get-template-list'\r\nimport logger from './logger'\r\nconst ora = require('ora')\r\nconst path = require('path')\r\nconst download = require('download-git-repo')\r\nconst inquirer = require('inquirer')\r\nconst rmSync = require('rimraf').sync\r\nconst { existsSync } = require('fs')\r\n\r\nconst getQuestions = (choices: string[]): downloadQuestion[] => {\r\n  return [\r\n    {\r\n      type: 'list',\r\n      name: 'name',\r\n      message: 'choose a template',\r\n      choices: choices\r\n    },\r\n    {\r\n      type: 'input',\r\n      name: 'branch',\r\n      message: 'use branch',\r\n      default: git_repo_default_branch\r\n    }\r\n  ]\r\n}\r\n\r\nexport default async (): Promise<initAnswer> => {\r\n  const tpls: templates = await getTemplateList()\r\n  const choices = Object.keys(tpls)\r\n  const questions = getQuestions(choices)\r\n  const { name, branch }: downloadAnswer = await inquirer.prompt(questions)\r\n  const place: string = tpls[name]['owner/name']\r\n  const tpl: string = path.join(tpl_path, name)\r\n  const res: initAnswer = { name, tpl }\r\n  const spinner = ora('download...')\r\n\r\n  spinner.start()\r\n\r\n  if (existsSync(tpl)) rmSync(tpl)\r\n\r\n  return new Promise<initAnswer>((resolve, rejects): void => {\r\n    download(`${place}#${branch}`, tpl, { clone: false }, (err: any) => {\r\n      spinner.stop()\r\n      if (err) return logger.fatal(err)\r\n      resolve(res)\r\n    })\r\n  })\r\n}\r\n","const exec = require('child_process').execSync\r\n\r\nexport default (): string => {\r\n  let name: string\r\n  let email: string\r\n\r\n  try {\r\n    name = exec('git config --get user.name')\r\n    email = exec('git config --get user.email')\r\n  } catch (e) {\r\n    return ''\r\n  }\r\n\r\n  name = JSON.stringify(name.toString().trim()).slice(1, -1)\r\n  email = ` <${email.toString().trim()}>`\r\n  return (name || '') + (email || '')\r\n}\r\n","import { obj, installOptions } from '../types'\r\nimport getGitUser from './get-git-user'\r\nconst { join, resolve } = require('path')\r\nconst { existsSync: exist } = require('fs')\r\nconst metadata = require('read-metadata')\r\nconst validateName = require('validate-npm-package-name')\r\n\r\nexport default (name: string, dir: string): installOptions => {\r\n  const opt: installOptions = getMetadata(dir)\r\n  setDefault(opt, 'name', name)\r\n  setValidateName(opt)\r\n  const author = getGitUser()\r\n  if (author) {\r\n    setDefault(opt, 'author', author)\r\n  }\r\n  return opt\r\n}\r\n\r\nconst getMetadata = (dir: string): installOptions => {\r\n  const json: string = join(dir, 'meta.json')\r\n  const js: string = join(dir, 'meta.js')\r\n  let opt = {} as installOptions\r\n  if (exist(json)) {\r\n    opt = metadata.sync(json)\r\n  } else if (exist(js)) {\r\n    const req = require(resolve(js))\r\n    if (req !== Object(req)) {\r\n      throw new Error('meta.js needs to return an object')\r\n    }\r\n    opt = req\r\n  }\r\n  return opt\r\n}\r\n\r\nconst setDefault = (opt: installOptions, key: string, val: string): void => {\r\n  const prompts: obj = opt.prompts || (opt.prompts = {})\r\n  if (!prompts[key] || typeof prompts[key] !== 'object') {\r\n    prompts[key] = {\r\n      type: 'string',\r\n      default: val\r\n    }\r\n  } else {\r\n    prompts[key]['default'] = val\r\n  }\r\n}\r\n\r\nfunction setValidateName(opts: installOptions): void {\r\n  const name: obj = opts.prompts.name\r\n  const customValidate = name.validate\r\n  name.validate = (name: string) => {\r\n    const its = validateName(name)\r\n    if (!its.validForNewPackages) {\r\n      const errors = (its.errors || []).concat(its.warnings || [])\r\n      return 'Sorry, ' + errors.join(' and ') + '.'\r\n    }\r\n    if (typeof customValidate === 'function') return customValidate(name)\r\n    return true\r\n  }\r\n}\r\n","import { obj, arr } from '../types'\r\n\r\nconst async = require('async')\r\nconst { prompt } = require('inquirer')\r\n\r\nexport default (prompts: obj, data: arr, done: any): void => {\r\n  async.eachSeries(\r\n    Object.keys(prompts),\r\n    (key: number, next: any) => {\r\n      promptFn(data, key, prompts[key], next)\r\n    },\r\n    done\r\n  )\r\n}\r\n\r\nconst promptFn = (data: arr, key: number, promptData: obj, done: any): void => {\r\n  promptsFn(key, promptData, (answers: any[]) => {\r\n    const answer = answers[key]\r\n    if (promptData.children && !!answer) {\r\n      data[key] = []\r\n      childrenAsk(data, key, promptData.children, done)\r\n    } else {\r\n      if (Array.isArray(answer)) {\r\n        data[key] = {}\r\n        answer.forEach(item => {\r\n          data[key][item] = true\r\n        })\r\n      } else {\r\n        data[key] = answer\r\n      }\r\n      done()\r\n    }\r\n  })\r\n}\r\n\r\nconst promptsFn = (key: number, promptData: obj, done: any): void => {\r\n  const { type, message, label, choices, validate = () => true } = promptData\r\n  const promptDefault = promptData.default\r\n  prompt([\r\n    {\r\n      type,\r\n      name: key,\r\n      message: message || label || key,\r\n      choices,\r\n      validate,\r\n      default: promptDefault\r\n    }\r\n  ]).then((answers: any[]) => {\r\n    done(answers)\r\n  })\r\n}\r\n\r\nconst childrenAsk = (data: arr, key: number, prompts: arr, done: any): void => {\r\n  let temp = {}\r\n  async.eachSeries(\r\n    Object.keys(prompts),\r\n    (key: number, next: any) => {\r\n      promptsFn(key, prompts[key], (answers: arr) => {\r\n        temp = Object.assign(temp, answers)\r\n        next()\r\n      })\r\n    },\r\n    () => {\r\n      prompt([\r\n        {\r\n          type: 'confirm',\r\n          name: 'continue',\r\n          message: 'æ¯å¦ç»§ç»­æ·»å æ°æ®ï¼',\r\n          default: false\r\n        }\r\n      ]).then((msg: any) => {\r\n        data[key].push(temp)\r\n        if (msg.continue) {\r\n          childrenAsk(data, key, prompts, done)\r\n        } else {\r\n          done()\r\n        }\r\n      })\r\n    }\r\n  )\r\n}\r\n","import { installParameter, installOptions, obj } from '../types/'\r\nimport getOptions from './options'\r\nimport ask from './ask'\r\nconst { join } = require('path')\r\nconst async = require('async')\r\nconst chalk = require('chalk')\r\nconst { render } = require('consolidate').handlebars\r\nconst Metalsmith = require('metalsmith')\r\nconst Handlebars = require('handlebars')\r\n\r\nHandlebars.registerHelper('if_eq', function(this: any, a: string, b: string, opts: any): void {\r\n  a === b ? opts.fn(this) : opts.inverse(this)\r\n})\r\n\r\nconst askQuestions = (prompts: object) => {\r\n  return (files: any, metalsmith: any, done: any) => {\r\n    ask(prompts, metalsmith.metadata(), done)\r\n  }\r\n}\r\n\r\nconst renderTemplateFiles = () => {\r\n  return (files: any, metalsmith: any, done: any): void => {\r\n    const keys = Object.keys(files)\r\n    const data = metalsmith.metadata()\r\n    async.each(\r\n      keys,\r\n      (key: number | string, next: any) => {\r\n        const str = files[key].contents.toString()\r\n        if (!/{{([^{}]+)}}/g.test(str)) {\r\n          return next()\r\n        }\r\n        render(str, data, (err: any, res: any) => {\r\n          if (err) {\r\n            err.message = `[${key}] ${err.message}`\r\n            return next(err)\r\n          }\r\n          if (key === '.easy-mock.js' && !data.easymock) {\r\n            delete files[key]\r\n            delete data.easymock\r\n          } else {\r\n            files[key].contents = Buffer.from(res)\r\n          }\r\n          next()\r\n        })\r\n      },\r\n      done\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Display template complete message.\r\n *\r\n * @param {String} message\r\n * @param {Object} data\r\n */\r\n\r\nfunction logMessage(message: string, data: obj): void {\r\n  if (!message) return\r\n  render(message, data, (err: any, res: string) => {\r\n    if (err) {\r\n      console.error('\\n   Error when rendering template complete message: ' + err.message.trim())\r\n    } else {\r\n      console.log(\r\n        '\\n' +\r\n          res\r\n            .split(/\\r?\\n/g)\r\n            .map(line => '   ' + line)\r\n            .join('\\n')\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\nexport default async ({ name, src, dest }: installParameter): Promise<any> => {\r\n  const opts: installOptions = getOptions(name, src)\r\n  const metalsmith = Metalsmith(join(src, 'template'))\r\n  const data = Object.assign(metalsmith.metadata(), {\r\n    destDirName: name,\r\n    inPlace: dest === process.cwd()\r\n  })\r\n\r\n  metalsmith.use(askQuestions(opts.prompts)).use(renderTemplateFiles())\r\n\r\n  return new Promise((resolve, reject): void => {\r\n    metalsmith\r\n      .clean(false)\r\n      .source('.')\r\n      .destination(dest)\r\n      .build((err: any, files: any) => {\r\n        resolve(err)\r\n        if (typeof opts.complete === 'function') {\r\n          const helpers = { chalk, files }\r\n          opts.complete(data, helpers)\r\n        } else {\r\n          logMessage(opts.completeMessage, data)\r\n        }\r\n      })\r\n  })\r\n}\r\n","import { obj, initAnswer } from '../../types'\nimport downloadTemplate from '../../utils/download-template'\nimport install from '../../utils/install'\nimport logger from '../../utils/logger'\nconst path = require('path')\nconst { prompt } = require('inquirer')\nconst { existsSync } = require('fs')\n\nexport default (project: string): void => {\n  const inPlace: boolean = project === '.'\n  const name: string = inPlace ? path.relative('../', process.cwd()) : project\n  const to: string = inPlace ? process.cwd() : path.resolve(name)\n\n  const needConfrim = inPlace || existsSync(to)\n  const confirm = (): void => {\n    prompt([\n      {\n        type: 'confirm',\n        message: inPlace\n          ? 'Are you sure you want to create a project in the current directory?'\n          : 'The current directory already exists. Do you want to continue?',\n        name: 'ok'\n      }\n    ])\n      .then(({ ok }: obj): void => {\n        if (ok) run(name, to)\n      })\n      .catch(logger.fatal)\n  }\n\n  needConfrim ? confirm() : run(name, to)\n}\n\nconst run = async (project: string, to: string): Promise<void> => {\n  const { tpl }: initAnswer = await downloadTemplate()\n\n  install({ name: project, src: tpl, dest: to }).catch(logger.fatal)\n}\n","import logger from './logger'\r\nconst { existsSync } = require('fs')\r\n\r\nexport const exit = (message = 'system interruption'): void => {\r\n  logger.fatal(message)\r\n  process.exit()\r\n}\r\n\r\nexport const existOrExit = (path: string, message = 'file not found'): void => {\r\n  if (!existsSync(path)) {\r\n    exit(message)\r\n  }\r\n}\r\n","import { existOrExit } from '../../utils/system'\nimport logger from '../../utils/logger'\nimport { user_tpl_json_path } from '../../config'\nconst { isEmpty } = require('lodash')\n\nexport default (): void => {\n  existOrExit(\n    user_tpl_json_path,\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\n  )\n\n  const pages = require(user_tpl_json_path).pages\n\n  logger.success('Page Listï¼')\n\n  if (isEmpty(pages)) {\n    return console.log('list is empty')\n  }\n\n  pages.forEach((item: object): void => {\n    console.log(`=>`, item)\n  })\n}\n","const actions = ['page']\r\nimport page from './page'\r\n\r\nexport default (type: string): void => {\r\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\r\n  page()\r\n}\r\n","import { initAnswer } from '../../types/'\r\nimport logger from '../../utils/logger'\r\nimport downloadTemplate from '../../utils/download-template'\r\n\r\nexport default async (): Promise<void> => {\r\n  const { name }: initAnswer = await downloadTemplate()\r\n  logger.success(`download successful`)\r\n}\r\n","import { initAnswer } from '../types'\r\nimport logger from './logger'\r\nconst assert = require('assert')\r\nconst mkdirp = require('mkdirp')\r\nconst rm = require('rimraf')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\nconst existsSync = fs.existsSync\r\nconst readFileSync = fs.readFileSync\r\nconst Handlebars = require('handlebars')\r\nconst upperFirst = require('lodash/upperFirst')\r\n\r\nHandlebars.registerHelper('upperFirst', upperFirst)\r\n\r\nexport const writeFile = (filePath: string, contents: string, cb: any): void => {\r\n  mkdirp(path.dirname(filePath), (err: any) => {\r\n    if (err) return console.error(`${filePath} creation failedï¼${err}`)\r\n    fs.writeFile(filePath, contents, cb)\r\n  })\r\n}\r\n\r\nexport const getTemplte = (filePath: string): any => {\r\n  assert(existsSync(filePath), `getTemplate: file ${filePath} not fould`)\r\n  const source = readFileSync(filePath, 'utf-8')\r\n  return Handlebars.compile(source)\r\n}\r\n\r\nexport const generate = (files: any[], answers: any): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    const len = files.length\r\n    let count = 0\r\n    files.forEach(item => {\r\n      const contents = getTemplte(item.from)(answers)\r\n      writeFile(item.to, contents, (err: any) => {\r\n        if (err) reject(err)\r\n        count++\r\n        if (count === len) {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport const deleteFiles = (files: any[]): Promise<void> => {\r\n  return new Promise((resolve, reject) => {\r\n    const len = files.length\r\n    let count = 0\r\n    files.forEach(item => {\r\n      rm(item.path, (err: any) => {\r\n        if (err) logger.fatal('failed', err)\r\n        count++\r\n        if (count === len) {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport default {\r\n  getTemplte,\r\n  generate,\r\n  deleteFiles\r\n}\r\n","import { existOrExit } from '../../utils/system'\r\nimport logger from '../../utils/logger'\r\nimport { generate } from '../../utils'\r\nimport { tpl_path, user_path, user_tpl_json_path } from '../../config'\r\nimport { obj } from '../../types'\r\n\r\nexport default async () => {\r\n  existOrExit(\r\n    user_tpl_json_path,\r\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\r\n  )\r\n\r\n  const ora = require('ora')\r\n  const { writeFile } = require('fs')\r\n  const { join } = require('path')\r\n  const { prompt } = require('inquirer')\r\n  const templte: obj = require(user_tpl_json_path)\r\n  const template_name: string = templte.name\r\n  const generator_path: string = join(tpl_path, `${template_name}/generator`)\r\n  const { getQuestions, getTemplates } = require(join(generator_path, 'command/add/page.js'))\r\n  const questions = getQuestions(user_path)\r\n  const answers = await prompt(questions)\r\n  const files = getTemplates(answers, user_path)\r\n\r\n  const spinner = ora('creating page...')\r\n  spinner.start()\r\n  await generate(files, answers)\r\n  templte.pages.push(answers)\r\n\r\n  writeFile(user_tpl_json_path, JSON.stringify(templte), (err: any): void => {\r\n    if (err) logger.fatal('failed to create pageï¼', err)\r\n    spinner.stop()\r\n    logger.success(`create page ${answers.name} successfully`)\r\n  })\r\n}\r\n","const actions = ['page']\r\nimport page from './page'\r\n\r\nexport default (type: string): void => {\r\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\r\n  page()\r\n}\r\n","import { existOrExit } from '../../utils/system'\r\nimport logger from '../../utils/logger'\r\nimport { deleteFiles } from '../../utils'\r\nimport { tpl_path, user_path, user_tpl_json_path } from '../../config'\r\n\r\nexport default async (): Promise<void> => {\r\n  existOrExit(\r\n    user_tpl_json_path,\r\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\r\n  )\r\n\r\n  const fs = require('fs')\r\n  const { join } = require('path')\r\n  const { prompt } = require('inquirer')\r\n  const ora = require('ora')\r\n\r\n  const template = require(user_tpl_json_path)\r\n  const template_name = template.name\r\n\r\n  const generator_path = join(tpl_path, `${template_name}/generator`)\r\n\r\n  const { questions, getTemplates } = require(join(generator_path, 'command/delete/page.js'))\r\n\r\n  const answers = await prompt(questions)\r\n  const files = getTemplates(answers, user_path)\r\n  const spinner = ora('deleting Page ...')\r\n\r\n  spinner.start()\r\n\r\n  await deleteFiles(files)\r\n\r\n  template.pages = template.pages.filter((item: any): any => {\r\n    if (item.name !== answers.name) {\r\n      return item\r\n    }\r\n    return null\r\n  })\r\n\r\n  fs.writeFile(user_tpl_json_path, JSON.stringify(template), (err: any): void => {\r\n    if (err) logger.fatal('delete fail', err)\r\n    spinner.stop()\r\n    logger.success(`delete page ${answers.name} successfully`)\r\n  })\r\n}\r\n","const actions = ['page']\r\nimport page from './page'\r\n\r\nexport default (type: string): void => {\r\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\r\n  page()\r\n}\r\n","import init from './init'\r\nimport list from './list'\r\nimport download from './download'\r\nimport add from './add'\r\nimport remove from './delete'\r\n\r\nexport default {\r\n  init,\r\n  list,\r\n  download,\r\n  add,\r\n  delete: remove\r\n}\r\n","import command from './command/index'\n\nexport default (): void => {\n  const program = require('commander')\n\n  program.version(require('../package').version).usage('<command> [options]')\n\n  program\n    .command('init [project-name]')\n    .description('Initialize a project')\n    .alias('i')\n    .action((project: string = '.'): void => {\n      command.init(project)\n    })\n\n  program\n    .command('download')\n    .description('Download project template')\n    .alias('load')\n    .action((): void => {\n      command.download()\n    })\n\n  program\n    .command('add [type]')\n    .description('Add, optional [page], default is page')\n    .alias('a')\n    .action((type: string = 'page'): void => {\n      command.add(type)\n    })\n\n  program\n    .command('delete [type]')\n    .description('Delete, optional [page], default to page.')\n    .alias('d')\n    .action((type: string = 'page'): void => {\n      command.delete(type)\n    })\n\n  program\n    .command('list [type]')\n    .description('List, optional [page], default is page')\n    .alias('l')\n    .action((type: string = 'page'): void => {\n      command.list(type)\n    })\n\n  program.parse(process.argv)\n\n  if (!program.args.length) {\n    program.help()\n  }\n}\n","import checkVersion from '../utils/check-version'\r\nimport app from '../index'\r\n\r\ncheckVersion((): void => {\r\n  app()\r\n})\r\n"],"names":["request","chalk","ora","path","join","async","prompt","existsSync","Handlebars","writeFile","actions","page"],"mappings":"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"}