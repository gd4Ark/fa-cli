{"version":3,"file":"index.es5.js","sources":["../src/config/index.ts","../src/utils/check-version.ts","../src/utils/get-template-list.ts","../src/utils/logger.ts","../src/utils/download-template.ts","../src/utils/get-git-user.ts","../src/utils/options.ts","../src/utils/ask.ts","../src/utils/install.ts","../src/command/init/index.ts","../src/utils/system.ts","../src/command/list/page.ts","../src/command/list/index.ts","../src/command/download/index.ts","../src/utils/index.ts","../src/command/add/page.ts","../src/command/add/index.ts","../src/command/delete/page.ts","../src/command/delete/index.ts","../src/command/index.ts","../src/index.ts","../src/bin/fa.ts"],"sourcesContent":["require('module-alias/register')\nconst path = require('path')\nconst home = require('user-home')\nconst pgk = require('~/package.json')\nconst org_name = 'fa-web-template'\n\nexport const pro_name: string = pgk.name\n\nexport const root_path: string = path.join(__dirname, '../')\n\nexport const tpl_path: string = path.join(home, `.${org_name}`)\n\nexport const user_path: string = process.cwd()\n\nexport const user_tpl_json_path: string = `${process.cwd()}/template.json`\n\nexport const git_tpl_list_url: string = `https://api.github.com/orgs/${org_name}/repos`\n\nexport const git_repo_default_branch: string = 'master'\n\nexport const cli_tag_url: string = 'https://registry.npm.taobao.org/fa-cli'\n","require('module-alias/register')\nimport { cli_tag_url, pro_name } from '../config/index'\nconst request = require('request')\nconst semver = require('semver')\nconst chalk = require('chalk')\nconst packageConfig = require('~/package.json')\n\nexport default (done: () => void): void => {\n  // Ensure minimum supported node version is used\n  if (!semver.satisfies(process.version, packageConfig.engines.node)) {\n    return console.log(\n      chalk.red(`  You must upgrade node to >=${packageConfig.engines.node}.x to use vue-cli`)\n    )\n  }\n  request(\n    {\n      url: cli_tag_url,\n      timeout: 1000\n    },\n    (err: Error | null, res: any, body: string): void => {\n      if (!err && res.statusCode === 200) {\n        const data = JSON.parse(body)['dist-tags']\n        const version = data.latest\n        const localVersion = packageConfig.version\n        if (semver.lt(localVersion, version)) {\n          console.log(chalk.yellow(` ${pro_name} release new version!`))\n          console.log('  latest:    ' + chalk.green(version))\n          console.log('  installed: ' + chalk.red(localVersion))\n        }\n      }\n      done()\n    }\n  )\n}\n","import { repositorie, templates } from '../types'\nimport { git_tpl_list_url, pro_name } from '../config'\n\nconst request = require('request')\nconst ora = require('ora')\n\nlet templates: templates | null = null\n\nexport default async (show: boolean = true): Promise<templates> => {\n  if (templates) return templates\n\n  const spinner = ora('getting template...')\n\n  if (show) {\n    spinner.start()\n  }\n\n  const headers = {\n    headers: {\n      'User-Agent': pro_name\n    },\n    url: git_tpl_list_url\n  }\n\n  const handler = (data: repositorie[]): templates => {\n    const tpls: templates = {}\n\n    data.forEach((item: repositorie) => {\n      const { name, html_url, default_branch } = item\n      tpls[name] = {\n        'owner/name': html_url.replace('https://github.com/', ''),\n        branch: default_branch\n      }\n    })\n\n    return tpls\n  }\n\n  return new Promise<templates>((resolve, reject): void => {\n    request(headers, (err: any, res: any, body: string): void => {\n      spinner.stop()\n\n      if (err) reject(err)\n\n      const data = JSON.parse(body)\n      templates = handler(data)\n\n      resolve(templates)\n    })\n  })\n}\n","require('module-alias/register')\nconst chalk = require('chalk')\nconst format = require('util').format\n\n/**\n * Prefix.\n */\n\nconst prefix = `  ${require('~/package.json').name}`\nconst sep = chalk.gray('Â·')\n\n/**\n * Log a `message` to the console.\n *\n * @param {String} message\n */\n\nexport const log = (...args: any[]): void => {\n  const msg = format.apply(format, args)\n  console.log(chalk.white(prefix), sep, msg)\n}\n\n/**\n * Log an error `message` to the console and exit.\n *\n * @param {String} message\n */\n\nexport const fatal = (...args: any[]): void => {\n  if (args[0] instanceof Error) args[0] = args[0].message.trim()\n  const msg = format.apply(format, args)\n  console.error(chalk.red(prefix), sep, msg)\n  process.exit(1)\n}\n\n/**\n * Log a success `message` to the console and exit.\n *\n * @param {String} message\n */\n\nexport const success = (...args: any[]): void => {\n  const msg = format.apply(format, args)\n  console.log(chalk.white(prefix), sep, msg)\n}\n\nexport default {\n  log,\n  fatal,\n  success\n}\n","import { initAnswer, downloadQuestion, downloadAnswer, templates } from '../types/index'\nimport { tpl_path, git_repo_default_branch } from '../config'\nimport getTemplateList from './get-template-list'\nimport logger from './logger'\nconst ora = require('ora')\nconst path = require('path')\nconst download = require('download-git-repo')\nconst inquirer = require('inquirer')\nconst rmSync = require('rimraf').sync\nconst { existsSync } = require('fs')\n\nconst getQuestions = (choices: string[]): downloadQuestion[] => {\n  return [\n    {\n      type: 'list',\n      name: 'name',\n      message: 'choose a template',\n      choices: choices\n    },\n    {\n      type: 'input',\n      name: 'branch',\n      message: 'use branch',\n      default: git_repo_default_branch\n    }\n  ]\n}\n\nexport default async (): Promise<initAnswer> => {\n  const tpls: templates = await getTemplateList()\n  const choices = Object.keys(tpls)\n  const questions = getQuestions(choices)\n  const { name, branch }: downloadAnswer = await inquirer.prompt(questions)\n  const place: string = tpls[name]['owner/name']\n  const tpl: string = path.join(tpl_path, name)\n  const res: initAnswer = { name, tpl }\n  const spinner = ora('download...')\n\n  spinner.start()\n\n  if (existsSync(tpl)) rmSync(tpl)\n\n  return new Promise<initAnswer>((resolve, rejects): void => {\n    download(`${place}#${branch}`, tpl, { clone: false }, (err: any) => {\n      spinner.stop()\n      if (err) return logger.fatal(err)\n      resolve(res)\n    })\n  })\n}\n","const exec = require('child_process').execSync\n\nexport default (): string => {\n  let name: string\n  let email: string\n\n  try {\n    name = exec('git config --get user.name')\n    email = exec('git config --get user.email')\n  } catch (e) {\n    return ''\n  }\n\n  name = JSON.stringify(name.toString().trim()).slice(1, -1)\n  email = ` <${email.toString().trim()}>`\n  return (name || '') + (email || '')\n}\n","import { obj, installOptions } from '../types'\nimport getGitUser from './get-git-user'\nconst { join, resolve } = require('path')\nconst { existsSync: exist } = require('fs')\nconst metadata = require('read-metadata')\nconst validateName = require('validate-npm-package-name')\n\nexport default (name: string, dir: string): installOptions => {\n  const opt: installOptions = getMetadata(dir)\n  setDefault(opt, 'name', name)\n  setValidateName(opt)\n  const author = getGitUser()\n  if (author) {\n    setDefault(opt, 'author', author)\n  }\n  return opt\n}\n\nconst getMetadata = (dir: string): installOptions => {\n  const json: string = join(dir, 'meta.json')\n  const js: string = join(dir, 'meta.js')\n  let opt = {} as installOptions\n  if (exist(json)) {\n    opt = metadata.sync(json)\n  } else if (exist(js)) {\n    const req = require(resolve(js))\n    if (req !== Object(req)) {\n      throw new Error('meta.js needs to return an object')\n    }\n    opt = req\n  }\n  return opt\n}\n\nconst setDefault = (opt: installOptions, key: string, val: string): void => {\n  const prompts: obj = opt.prompts || (opt.prompts = {})\n  if (!prompts[key] || typeof prompts[key] !== 'object') {\n    prompts[key] = {\n      type: 'string',\n      default: val\n    }\n  } else {\n    prompts[key]['default'] = val\n  }\n}\n\nfunction setValidateName(opts: installOptions): void {\n  const name: obj = opts.prompts.name\n  const customValidate = name.validate\n  name.validate = (name: string) => {\n    const its = validateName(name)\n    if (!its.validForNewPackages) {\n      const errors = (its.errors || []).concat(its.warnings || [])\n      return 'Sorry, ' + errors.join(' and ') + '.'\n    }\n    if (typeof customValidate === 'function') return customValidate(name)\n    return true\n  }\n}\n","import { obj, arr } from '../types'\n\nconst async = require('async')\nconst { prompt } = require('inquirer')\n\nexport default (prompts: obj, data: arr, done: any): void => {\n  async.eachSeries(\n    Object.keys(prompts),\n    (key: number, next: any) => {\n      promptFn(data, key, prompts[key], next)\n    },\n    done\n  )\n}\n\nconst promptFn = (data: arr, key: number, promptData: obj, done: any): void => {\n  promptsFn(key, promptData, (answers: any[]) => {\n    const answer = answers[key]\n    if (promptData.children && !!answer) {\n      data[key] = []\n      childrenAsk(data, key, promptData.children, done)\n    } else {\n      if (Array.isArray(answer)) {\n        data[key] = {}\n        answer.forEach(item => {\n          data[key][item] = true\n        })\n      } else {\n        data[key] = answer\n      }\n      done()\n    }\n  })\n}\n\nconst promptsFn = (key: number, promptData: obj, done: any): void => {\n  const { type, message, label, choices, validate = () => true } = promptData\n  const promptDefault = promptData.default\n  prompt([\n    {\n      type,\n      name: key,\n      message: message || label || key,\n      choices,\n      validate,\n      default: promptDefault\n    }\n  ]).then((answers: any[]) => {\n    done(answers)\n  })\n}\n\nconst childrenAsk = (data: arr, key: number, prompts: arr, done: any): void => {\n  let temp = {}\n  async.eachSeries(\n    Object.keys(prompts),\n    (key: number, next: any) => {\n      promptsFn(key, prompts[key], (answers: arr) => {\n        temp = Object.assign(temp, answers)\n        next()\n      })\n    },\n    () => {\n      prompt([\n        {\n          type: 'confirm',\n          name: 'continue',\n          message: 'æ¯å¦ç»§ç»­æ·»å æ°æ®ï¼',\n          default: false\n        }\n      ]).then((msg: any) => {\n        data[key].push(temp)\n        if (msg.continue) {\n          childrenAsk(data, key, prompts, done)\n        } else {\n          done()\n        }\n      })\n    }\n  )\n}\n","import { installParameter, installOptions, obj } from '../types/'\nimport getOptions from './options'\nimport ask from './ask'\nconst { join } = require('path')\nconst async = require('async')\nconst chalk = require('chalk')\nconst { render } = require('consolidate').handlebars\nconst Metalsmith = require('metalsmith')\nconst Handlebars = require('handlebars')\n\nHandlebars.registerHelper('if_eq', function(this: any, a: string, b: string, opts: any): void {\n  a === b ? opts.fn(this) : opts.inverse(this)\n})\n\nconst askQuestions = (prompts: object) => {\n  return (files: any, metalsmith: any, done: any) => {\n    ask(prompts, metalsmith.metadata(), done)\n  }\n}\n\nconst renderTemplateFiles = () => {\n  return (files: any, metalsmith: any, done: any): void => {\n    const keys = Object.keys(files)\n    const data = metalsmith.metadata()\n    async.each(\n      keys,\n      (key: number | string, next: any) => {\n        const str = files[key].contents.toString()\n        if (!/{{([^{}]+)}}/g.test(str)) {\n          return next()\n        }\n        render(str, data, (err: any, res: any) => {\n          if (err) {\n            err.message = `[${key}] ${err.message}`\n            return next(err)\n          }\n          if (key === '.easy-mock.js' && !data.easymock) {\n            delete files[key]\n            delete data.easymock\n          } else {\n            files[key].contents = Buffer.from(res)\n          }\n          next()\n        })\n      },\n      done\n    )\n  }\n}\n\n/**\n * Display template complete message.\n *\n * @param {String} message\n * @param {Object} data\n */\n\nfunction logMessage(message: string, data: obj): void {\n  if (!message) return\n  render(message, data, (err: any, res: string) => {\n    if (err) {\n      console.error('\\n   Error when rendering template complete message: ' + err.message.trim())\n    } else {\n      console.log(\n        '\\n' +\n          res\n            .split(/\\r?\\n/g)\n            .map(line => '   ' + line)\n            .join('\\n')\n      )\n    }\n  })\n}\n\nexport default async ({ name, src, dest }: installParameter): Promise<any> => {\n  const opts: installOptions = getOptions(name, src)\n  const metalsmith = Metalsmith(join(src, 'template'))\n  const data = Object.assign(metalsmith.metadata(), {\n    destDirName: name,\n    inPlace: dest === process.cwd()\n  })\n\n  metalsmith.use(askQuestions(opts.prompts)).use(renderTemplateFiles())\n\n  return new Promise((resolve, reject): void => {\n    metalsmith\n      .clean(false)\n      .source('.')\n      .destination(dest)\n      .build((err: any, files: any) => {\n        resolve(err)\n        if (typeof opts.complete === 'function') {\n          const helpers = { chalk, files }\n          opts.complete(data, helpers)\n        } else {\n          logMessage(opts.completeMessage, data)\n        }\n      })\n  })\n}\n","require('module-alias/register')\nimport { obj, initAnswer } from '../../types'\nimport downloadTemplate from '../../utils/download-template'\nimport install from '../../utils/install'\nimport logger from '../../utils/logger'\nconst path = require('path')\nconst { prompt } = require('inquirer')\nconst { existsSync } = require('fs')\n\nexport default (project: string): void => {\n  const inPlace: boolean = project === '.'\n  const name: string = inPlace ? path.relative('../', process.cwd()) : project\n  const to: string = inPlace ? process.cwd() : path.resolve(name)\n\n  const needConfrim = inPlace || existsSync(to)\n  const confirm = (): void => {\n    prompt([\n      {\n        type: 'confirm',\n        message: inPlace\n          ? 'Are you sure you want to create a project in the current directory?'\n          : 'The current directory already exists. Do you want to continue?',\n        name: 'ok'\n      }\n    ])\n      .then(({ ok }: obj): void => {\n        if (ok) run(name, to)\n      })\n      .catch(logger.fatal)\n  }\n\n  needConfrim ? confirm() : run(name, to)\n}\n\nconst run = async (project: string, to: string): Promise<void> => {\n  const { tpl }: initAnswer = await downloadTemplate()\n\n  install({ name: project, src: tpl, dest: to }).catch(logger.fatal)\n}\n","import logger from './logger'\nconst { existsSync } = require('fs')\n\nexport const exit = (message = 'system interruption'): void => {\n  logger.fatal(message)\n  process.exit()\n}\n\nexport const existOrExit = (path: string, message = 'file not found'): void => {\n  if (!existsSync(path)) {\n    exit(message)\n  }\n}\n","import { existOrExit } from '../../utils/system'\nimport logger from '../../utils/logger'\nimport { user_tpl_json_path } from '../../config'\nrequire('module-alias/register')\nconst { isEmpty } = require('lodash')\n\nexport default (): void => {\n  existOrExit(\n    user_tpl_json_path,\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\n  )\n\n  const pages = require(user_tpl_json_path).pages\n\n  logger.success('Page Listï¼')\n\n  if (isEmpty(pages)) {\n    return console.log('list is empty')\n  }\n\n  pages.forEach((item: object): void => {\n    console.log(`=>`, item)\n  })\n}\n","const actions = ['page']\nimport page from './page'\n\nexport default (type: string): void => {\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\n  page()\n}\n","import { initAnswer } from '../../types/'\nimport logger from '../../utils/logger'\nimport downloadTemplate from '../../utils/download-template'\n\nexport default async (): Promise<void> => {\n  const { name }: initAnswer = await downloadTemplate()\n  logger.success(`download successful`)\n}\n","import { initAnswer } from '../types'\nimport logger from './logger'\nconst assert = require('assert')\nconst mkdirp = require('mkdirp')\nconst rm = require('rimraf')\nconst fs = require('fs')\nconst path = require('path')\nconst existsSync = fs.existsSync\nconst readFileSync = fs.readFileSync\nconst Handlebars = require('handlebars')\nconst upperFirst = require('lodash/upperFirst')\n\nHandlebars.registerHelper('upperFirst', upperFirst)\n\nexport const writeFile = (filePath: string, contents: string, cb: any): void => {\n  mkdirp(path.dirname(filePath), (err: any) => {\n    if (err) return console.error(`${filePath} creation failedï¼${err}`)\n    fs.writeFile(filePath, contents, cb)\n  })\n}\n\nexport const getTemplte = (filePath: string): any => {\n  assert(existsSync(filePath), `getTemplate: file ${filePath} not fould`)\n  const source = readFileSync(filePath, 'utf-8')\n  return Handlebars.compile(source)\n}\n\nexport const generate = (files: any[], answers: any): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    const len = files.length\n    let count = 0\n    files.forEach(item => {\n      const contents = getTemplte(item.from)(answers)\n      writeFile(item.to, contents, (err: any) => {\n        if (err) reject(err)\n        count++\n        if (count === len) {\n          resolve()\n        }\n      })\n    })\n  })\n}\n\nexport const deleteFiles = (files: any[]): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    const len = files.length\n    let count = 0\n    files.forEach(item => {\n      rm(item.path, (err: any) => {\n        if (err) logger.fatal('failed', err)\n        count++\n        if (count === len) {\n          resolve()\n        }\n      })\n    })\n  })\n}\n\nexport default {\n  getTemplte,\n  generate,\n  deleteFiles\n}\n","import { existOrExit } from '../../utils/system'\nimport logger from '../../utils/logger'\nimport { generate } from '../../utils'\nimport { tpl_path, user_path, user_tpl_json_path } from '../../config'\nimport { obj } from '../../types'\n\nexport default async () => {\n  existOrExit(\n    user_tpl_json_path,\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\n  )\n\n  const ora = require('ora')\n  const { writeFile } = require('fs')\n  const { join } = require('path')\n  const { prompt } = require('inquirer')\n  const templte: obj = require(user_tpl_json_path)\n  const template_name: string = templte.name\n  const generator_path: string = join(tpl_path, `${template_name}/generator`)\n  const { getQuestions, getTemplates } = require(join(generator_path, 'command/add/page.js'))\n  const questions = getQuestions(user_path)\n  const answers = await prompt(questions)\n  const files = getTemplates(answers, user_path)\n\n  const spinner = ora('creating page...')\n  spinner.start()\n  await generate(files, answers)\n  templte.pages.push(answers)\n\n  writeFile(user_tpl_json_path, JSON.stringify(templte), (err: any): void => {\n    if (err) logger.fatal('failed to create pageï¼', err)\n    spinner.stop()\n    logger.success(`create page ${answers.name} successfully`)\n  })\n}\n","const actions = ['page']\nimport page from './page'\n\nexport default (type: string): void => {\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\n  page()\n}\n","import { existOrExit } from '../../utils/system'\nimport logger from '../../utils/logger'\nimport { deleteFiles } from '../../utils'\nimport { tpl_path, user_path, user_tpl_json_path } from '../../config'\n\nexport default async (): Promise<void> => {\n  existOrExit(\n    user_tpl_json_path,\n    'The template.json file could not be found, please make sure to run this command in the project root directory!'\n  )\n\n  const fs = require('fs')\n  const { join } = require('path')\n  const { prompt } = require('inquirer')\n  const ora = require('ora')\n\n  const template = require(user_tpl_json_path)\n  const template_name = template.name\n\n  const generator_path = join(tpl_path, `${template_name}/generator`)\n\n  const { questions, getTemplates } = require(join(generator_path, 'command/delete/page.js'))\n\n  const answers = await prompt(questions)\n  const files = getTemplates(answers, user_path)\n  const spinner = ora('deleting Page ...')\n\n  spinner.start()\n\n  await deleteFiles(files)\n\n  template.pages = template.pages.filter((item: any): any => {\n    if (item.name !== answers.name) {\n      return item\n    }\n    return null\n  })\n\n  fs.writeFile(user_tpl_json_path, JSON.stringify(template), (err: any): void => {\n    if (err) logger.fatal('delete fail', err)\n    spinner.stop()\n    logger.success(`delete page ${answers.name} successfully`)\n  })\n}\n","const actions = ['page']\nimport page from './page'\n\nexport default (type: string): void => {\n  if (!actions.includes(type)) return console.log(`type not foundï¼${type}`)\n  page()\n}\n","import init from './init'\nimport list from './list'\nimport download from './download'\nimport add from './add'\nimport remove from './delete'\n\nexport default {\n  init,\n  list,\n  download,\n  add,\n  delete: remove\n}\n","import command from './command/index'\n\nexport default (): void => {\n  const program = require('commander')\n\n  program.version(require('../package').version).usage('<command> [options]')\n\n  program\n    .command('init [project-name]')\n    .description('Initialize a project')\n    .alias('i')\n    .action((project: string = '.') => {\n      command.init(project)\n    })\n\n  program\n    .command('download')\n    .description('Download project template')\n    .alias('load')\n    .action(() => {\n      command.download()\n    })\n\n  program\n    .command('add [type]')\n    .description('Add, optional [page], default is page')\n    .alias('a')\n    .action((type: string = 'page') => {\n      command.add(type)\n    })\n\n  program\n    .command('delete [type]')\n    .description('Delete, optional [page], default to page.')\n    .alias('d')\n    .action((type: string = 'page') => {\n      command.delete(type)\n    })\n\n  program\n    .command('list [type]')\n    .description('List, optional [page], default is page')\n    .alias('l')\n    .action((type: string = 'page') => {\n      command.list(type)\n    })\n\n  program.parse(process.argv)\n\n  if (!program.args.length) {\n    program.help()\n  }\n}\n","import checkVersion from '../utils/check-version'\nimport app from '../index'\n\ncheckVersion((): void => {\n  app()\n})\n"],"names":["request","chalk","ora","path","join","async","prompt","existsSync","Handlebars","writeFile","actions","page"],"mappings":"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"}